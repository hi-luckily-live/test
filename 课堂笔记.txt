                                   JQUERY


一。JQUERY学习重点:

       1.熟练背诵JQUERY[选择器和过滤器]语法

       2.熟练掌握【JQUERY对象】提供【功能函数】

二。jquery学习方式
       1.一天理论介绍

       2.分段提供jquery练习内容


三。JQUERY技术介绍:

      1.就是JavaScript的封装版

      2.简化JavaScript对DOM对象定位以及对DOM对象属性操作开发步骤

四。JQUERY使用：

      1.下载jquery工具文件，并导入到工程中.

      2.将jquery文件加载到浏览上。


五。jquery对象与DOM对象区别:

      1. DOM对象:
                   1)在浏览器加载网页时，由浏览器负责创建的.
		   2)一个html标签对应一个DOM对象.
		   3)可以通过管理DOM对象，来对关联html标签中属性进行操作。


     2.  jquery对象：

                   1)是[jquery函数 $() ]负责创建的
		   2)jquery对象就是一个【数组】
		   3)jquery对象中存放的本次定位【dom对象】
		   4)可以通过jquery对象中【功能函数】,来快速的对定位【dom对象】进行操作管理


六。JQUERY对象与DOM对象转换:

                   1.如何将JQUERY对象转换为DOM对象.

		       for(var i=0;i<$obj.length;i++){
		                var domObj =  $obj[i];
		       }

                   2.如何将DOM对象转换为JQUERY对象

		       var $obj =  $(domObj);

                   ***** jquery对象与DOM对象之间属性和函数彼此不能调用.

--------------------------------------------------------------------------------------------------------------

                      JQUERY选择器语法


一。什么是选择器语法:

                     1.就是对DOM对象进行定位的条件，比如根据ID定位，根据标签类型名
		     2.jquery中只有三种选择器


二。基本选择器:

                    1.【定位条件】：可以根据ID编号，根据标签类型名,根据标签采用样式选择器

		    2.【使用】：

		                 1）  $("#id编号")：代替 document.getElementById("id")
				                     根据ID编号定位对应的DOM对象。让DOM对象保存到一个数组中
						     并返回。返回这个数组就是【jquery对象】

                                 2）  $(".样式选择器名称")：代替document.getElementsByClassName("样式选择器名")
				                             将使用了指定的样式选择器的dom对象保存到同一个数组中，
							      并返回。返回这个数组就是【jquery对象】

                                 3）  $("标签类型名"): 代替document.getElementsByTagName()
				                        将所有指定的标签类型关联的DOM对象保存到同一个数组中并返回
							，返回的这个数组就是【jquery对象】

                                 4)   $("*"): 定位浏览器中所有的DOM对象保存到同一个数组中并返回。
				              返回的这个数组就是【jquery对象】

                                 5）  $("条件1,条件2")：只要DOM对象满足其中的一种条件，就会被定位到数组中
				                         相当于mysql or   where sal>=3000 or job='mangaer'
				              

三。层级选择器:

                1.[定位条件]：可以根据标签之间父子关系定位
		               可以根据标签之间兄弟关系定位

                2.[标签之间关系]:

		                 1)父子关系：就是包含关系

				              <tr>
                                                 <td>
						    <input type="checkbox">
						 </td>
					      </tr>

					      TD   是  TR    的     【直接子标签】

					      INPUT  是  TD  的     【直接子标签】

					      INPUT  是  TR  的     【间接子标签】

                                 2）兄弟关系: 两个标签拥有相同的父标签，并且彼此之间没有包含关系

				              <body>

                                                 <div>1</div>    大哥
						 <div>2</div>    二哥
						 <p>段落标签</p> 三弟

					      </body>

                 3.【使用】：

		                 1） $("定位父标签条件>定位子标签条件")

				      定位当前父标签下，所有满足条件的【直接子标签】

                                 2）  $("定位父标签条件 定位子标签条件")

				       定位当前父标签下，所有满足条件的【直接子标签】和【间接子标签】


                                 3)   $("定位当前标签条件~定位兄弟标签条件"):

				       定位当前标签【后面】，所有满足条件的兄弟标签

                                 4）  $("定位当前标签条件+定位兄弟标签条件"):
				        定位当前标签【后面与之紧邻的】，并且满足条件的所有兄弟标签


                                 5） $("定位当前标签条件").siblings("定位兄弟标签条件")

				      定位当前标签[前面与后面]所有满足条件的兄弟标签


四。INPUT标签选择器:


                 1.INPUT标签组成:

		                 <input type="text">
				 <input type="password">
                                 <input type="radio">
                                 <input type="checkbox">
				 <input type="file">
                                 <input type="button">
                                 <input type="submit">
                                 <input type="reset">

                 2.INPUT标签作用：
		                  作为浏览器向网站发送请求是携带请求参数


                 3.[使用]:   $(":type属性名字")

		 4.【例子】:
		               $(":button"):定位页面中所有的button关联的DOM

			       $(":checkbox")：定位页面中所有的checkbox关联的DOM

			       $(":table"):无法定位任何内容


--------------------------------------------------------------------------------------------------------------

                                 JQUERY中过滤器

一。过滤器语法介绍:

            1.对已经定位到jquery对象中DOM对象，进行二次过滤筛选的。

	    2.过滤器不能独立使用，必须声明在选择器后面

	    3.六种过滤器（三种常见过滤器）
	    4.将多个过滤器放到同一个jquery函数，进行层层过滤

二。基本过滤器:

            1.[过滤器条件]: 根据已经定位的DOM对象在jquery对象中存储位置进行二次过滤筛选

	    2.[使用]:

	           $("选择器:first")：留下满足条件中的第一个DOM对象
		                       例子：$(":button:first"):定位页面中第一个button

 
                   $("选择器:last")：留下满足条件中的最后一个DOM对象
		                       例子：$(":button:last"):定位页面中最后一个button


                   $("选择器:eq(下标值)"):留下满足条件中的指定位置的DOM对象
		                          例子：$("div:eq(2)") 定位页面中第三个DIV


                   $("选择器:lt(下标值)")：留下满足条件中的指定位置之前的所有Dom
		                           例子：  $(":checkbox:lt(2)"):页面中前两个checkbox

                   $("选择器:gt(下标值)"):留下满足条件中的指定位置之后的所有Dom

					   例子: $(":button:gt(3)"):位置在第四个butotn之后的所有的button

三。基本属性过滤器

               1.[过滤条件]: 根据标签在声明时是否为指定属性进行手动赋值

	                     根据标签的属性内容与【指定内容】关系进行过滤器


               2.[例子]:
	                     <div>1</div>
			     <div name="two">2</div>
			     <div name="three">3</div>
			     <div name="four">4</div>

			     问题1,哪一个DIV中没有name属性

			            所有DIV标签都有name属性

                             问题2：哪一个DIV中name属性的值是""
			            第一个DIV手动为name属性赋值，因此name属性值是默认值，就是""


               3.[使用]:

	                  1) $("选择器[属性名]"):留下满足定位条件的并且在声明时为指定属性进行手动赋值的DOM对象

			                          例子: $("div[name]") <div name="two">2</div>
						                       <div name="three">3</div>

                          2) $("选择器[属性名='值']")：留下满足定位条件的并且指定属性内容【等于】指定内容DOM

			                           例子: $("div[name='two']")  <div name="two">2</div>

						         $("div[name='']") <div>1</div>

							 $("div[name!='four']") <div>1</div>
			                                                         <div name="two">2</div>
			                                                         <div name="three">3</div>

                          3.$("选择器[属性名^='值']"):留下满足定位条件的并且指定属性内容以【指定内容为开头】所有DOM
			                             例子: $("div[name^='t']")   <div name="two">2</div>
			                                                          <div name="three">3</div>

                         4.$("选择器[属性名$='值']")留下满足定位条件的并且指定属性内容以【指定内容为结尾】所有DOM
			                             
						      例子:$("div[name$='e']")  <div name="three">3</div>


       
                         5.$("选择器[属性名*='值']")留下满足定位条件的并且指定属性内容【包含】指定内容的所有DOM
                                                      例子: $("div[name*='o']")  <div name="two">2</div>
						                                  <div name="four">4</div>

                         6.$("选择器[属性名1][属性名2*='值'][属性名3^='值']")


四。工作状态属性过滤器

             1.html标签属性分类：

	                1）基本属性：绝大多数标签都拥有的属性，【id,name,title,rowspan】

			2) 样式属性：背景，字体，边框

			3)  value属性： 只存在【表单域标签中 （input,select,textarea）】

			4) 工作状态属性:只存在表单域标签[chekced，disabled，selected]

			5) 监听事件属性 ： onclick ,onchange....

             2.[使用]:

	                1)  $("选择器:enabled")：留下满足条件的并且处于【可用状态】的DOM

			                          例子: $(":button:enabled")：定位所有处于可用的button

                        2)  $("选择器:disabled")：留下满足条件的并且处于【不可用状态】的DOM

			                            例子: $(":button:disabled")：定位所有处于不可用的button

                        3）$("选择器:checked")： 留下满足条件的并且处于【选中状态的】DOM

			                            例子:$(":checkbox:checked:first"):页面中第一个被选中的checkbox

                       4)  $("选择器:selected")：留下满足条件的并且处于【选中状态的】DOM

		                                    例子：$("select>option:selected")：下拉列表中别选中的option

-------------------------------------------------------------------------------------------------------------------
                              JQUERY对象中【功能函数】

一。show() & hide()：

     show():负责让jquery对象包含的所有DOM对象关联的标签在浏览上显示  style="display:block"

     hide():负责让jquery对象包含的所有DOM对象关联的标签在浏览上隐藏  style="display:none"


二。remove() & empty():

     empty：将当前标签子标签进行清除处理

     remove：将当前标签及其子标签一并删除

三. append() & appendTo()

     1.共同点:都是操作标签中innerHTML，为当前标签添加子标签

     2.append():  父标签.append（子标签）；父亲给自己找了一个儿子

       appendTo(): 子标签.appendTo(父标签); 儿子各自找了一个爹


四。属性操作函数

    1. val函数: value
                 1) $obj.val(): 读取jquery对象中第一个DOM对象的【value属性值】

		 2) $obj.val(值):为jquery对象中所有DOM对象的[value属性]进行统一赋值


    2.prop函数: 工作状态属性  checked,disabled,selected

                1) $obj.prop("checked",true)：为jquery对象中所有DOM对象的checked属性值赋值为true

		2) $obj.prop（"checked"）：读取jquery对象中第一个DOM对象的【checked属性值】


    3.attr函数: 基本属性  id  name  title  rowspan

               1) $obj.attr("name","ck")：为jquery对象中所有DOM对象的【name属性】统一赋值为[ck]

	       2) $obj.attr("title")：读取jquery对象中第一个DOM对象的【title属性】的值

   4.text函数：操作属性innerText，双目标签的文本显示内容  <div>123<div>     <br/>123

               1) $obj.text("123"):为jquery对象中所有DOM对象的innerText属性赋值为"123"

	       2）$obj.text();   读取jquery对象中所有DOM对象的innerText属性内容，拼接为一个字符串返回

------------------------------------------------------------------------------------------------------------

                                JQUERY中事件绑定方式

 一。JavaScript中事件绑定方式:

            1.嵌入式绑定:   <input type="button" onclick="fun1()">

	                     缺点：一次只能为一个标签绑定监听事件

            2.基于DOM对象绑定方式:
	                      
			     var array = docuemnt.getElementsByName("ck");
			     for(var i=0;i<array.length;i++){
			            var domObj =  array[i];
				    domObj.onclick = fun1;
			     }
			     缺点：需要开发人员自行遍历数组，来绑定监听事件

二。jquery中事件绑定方式:

           1. $obj.jquery监听事件函数(处理函数)

	      [例子]:
	               $(":button").click(fun1);
		       为页面中所有的btton绑定onclick以及对应处理函数fun1

             [jquery监听事件函数]:
	                              html监听事件名称              jquery监听事件函数
				      
				         onclick                      $obj.click(fun1);

					 onchange                     $obj.change(fun1);

					 onmouseover                  $obj.mouseover(fun1);
					
					*******jquery监听事件函数名字就是【jquery监听事件函数】去掉[on]

          2.$obj.bind("jquery监听事件函数名",处理函数):以这种方式绑定监听事件，可以解除的

	    $obj.unbind("jquery监听事件函数名"):将指定监听事件从DOM对象身上移除。

	    $obj.unbind():  将所有监听事件从DOM对象身上移除。